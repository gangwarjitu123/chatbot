@{
    ViewData["Title"] = "Home Page";
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="icon" href="images/favicon.png" type="image/png" />
    <link rel="stylesheet" href="chat.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <title>Chat</title>
    <style>
        g {
            display: none
        }
    </style>
</head>

<body>
    <header class="header">
        <div class="header_content">
            <figure>
                <img src="images/header_log.png" alt="">
            </figure>
            <div class="header_item_desc">
                <h1>Swasthya Mitra by NHM</h1>
                <h3>DSS for Pediatric COVID-19 severity classification </h3>
                <input type="hidden" id="chid" value="@ViewBag.ID" />
            </div>
        </div>
    </header>
    <section class="chat_main_container" id="mainsection">
    </section>
    <div class="typeLoader" style="display: none;">
        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
             style="margin: auto; background: none repeat scroll 0% 0%; display: block; shape-rendering: auto;"
             width="250px" height="100px" viewBox="0 0 100 100" preserveAspectRatio="xMidYMid">
            <circle cx="27.5" cy="54" r="5" fill="#af8490">
                <animate attributeName="cy" calcMode="spline" keySplines="0 0.5 0.5 1;0.5 0 1 0.5;0.5 0.5 0.5 0.5"
                         repeatCount="indefinite" values="54;46;54;54" keyTimes="0;0.36;0.72;1" dur="1.25s"
                         begin="-0.8999999999999999s"></animate>
            </circle>
            <circle cx="42.5" cy="54" r="5" fill="#af8490">
                <animate attributeName="cy" calcMode="spline" keySplines="0 0.5 0.5 1;0.5 0 1 0.5;0.5 0.5 0.5 0.5"
                         repeatCount="indefinite" values="54;46;54;54" keyTimes="0;0.36;0.72;1" dur="1.25s"
                         begin="-0.675s"></animate>
            </circle>
            <circle cx="57.5" cy="54" r="5" fill="#af8490">
                <animate attributeName="cy" calcMode="spline" keySplines="0 0.5 0.5 1;0.5 0 1 0.5;0.5 0.5 0.5 0.5"
                         repeatCount="indefinite" values="54;46;54;54" keyTimes="0;0.36;0.72;1" dur="1.25s"
                         begin="-0.44999999999999996s"></animate>
            </circle>
            <circle cx="72.5" cy="54" r="5" fill="#af8490">
                <animate attributeName="cy" calcMode="spline" keySplines="0 0.5 0.5 1;0.5 0 1 0.5;0.5 0.5 0.5 0.5"
                         repeatCount="indefinite" values="54;46;54;54" keyTimes="0;0.36;0.72;1" dur="1.25s"
                         begin="-0.22499999999999998s"></animate>
            </circle>
        </svg>
    </div>
    <!-- <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script> -->
    <script src="jQuery_Main.js"></script>
    <script src="chat.js" type="text/javascript"></script>
    <script type="text/javascript">
        var age = 0;
        var weight = 0;
        var symtoms = '';
        var covidtest = '';
        var contactwithcovid = '';
        var feversince = 0;
        var breathcount = 0;
        var nasalflaring = '';
        var pulserateapplicable = '';
        var pulserate = 0;
        var crt = 0;
        var noiseduringbreathing = '';
        var severechestindrawing = '';
        var temperature = '';
        var spo2applicable = '';
        var spo2rate = 0;
        var covidantigentest = '';
        var lookforassociated = '';
        var historycondition = ''



        var cQuestionId = 0;
        var JData = [];
        $(document).ready(function () {
            JData = LoadJsonData();
            LoadWellcomeMessage();
        });


        function LoadJsonData() {
            var jsonIssues;
            $.ajax({
                url: "data1.json",
                async: false,
                dataType: 'json',
                success: function (data) {
                    jsonIssues = data.Questions;
                }
            });
            return jsonIssues;
        }

        function LoadCardOptionQuestion(data) {
            $('.typeLoader').fadeIn();
            $('.back_btn').removeClass('show');
            var htmtxt = '';
            htmtxt += '<article class="left-msg message InputOption">';
            htmtxt += '<div class="msg_container">';
            htmtxt += '<div class="">';
            htmtxt += '<figure class="image is-35x35 img_scale Avatar">';
            htmtxt += '<img alt="" class="Media is-contain" src="images/doc_icon.png"></figure></div>';
            htmtxt += '<div class="message-content">';
            htmtxt += '<div class="msg_content_item  is-shape-rounded">';
            htmtxt += '<svg class="MessageBubble__Decorator" xmlns="http://www.w3.org/2000/svg" width="16" height="28"';
            htmtxt += 'viewBox="0 0 16 28">';
            htmtxt += '<title> Path</title>';
            htmtxt += '<desc> Created with Sketch.</desc>';
            htmtxt += '<g fill="none"><path d="M5 0.2C5 10 5 16.6 5 20 5 23.4 3.3 25.8 0 27.2 10.5 27.8 15.8 24.8 15.8 18.4 15.8 16.3 15.8 10.3 15.8 0.2L5 0.2Z"fill="#FFF"></path></g></svg>';
            htmtxt += '<div class="MessageBubble__content">';
            htmtxt += '<div style="max-width: 100%;"><div class="content is-marginless">';
            htmtxt += data.dmessage;
            htmtxt += '</div></div></div></div></div></div>';
            htmtxt += '<div class="msg_footer"><div class="chatMSGtime">03:15</div><div class="validate_Msg">choose at least 1 and up to 9</div></div>';
            if (data.cards[0].items.length > 0) {
                var cardItem = data.cards[0].items;
                htmtxt += '<div class="option_Msg">';
                htmtxt += '<div class="option_Msg_content">';
                for (var i = 0; i < cardItem.length; i++) {
                    htmtxt += '<div class="option_Msg_item">' + cardItem[i].name + '</div>';
                }
                htmtxt += '</div>';
                htmtxt += '<div class="btn_container"><div class="btn" data-obj="' + data.objname + '" data-parentid="' + data.parentid + '"  data-curentqid="' + data.id + '"  data-var="' + data.cards[0].click + '" onclick="AskNextQuestionCardOption(this);">Send</div></div>';
                htmtxt += '</div>';
            }
            htmtxt += '<div class="back_btn_container">';
            htmtxt += '<button type="button" data-parentid="' + data.parentid + '" onclick="loadBackquestion(this);"  class="back_btn">Back</button>';
            htmtxt += '</div>';
            htmtxt += '</article>';
            setTimeout(function () {
                $('.typeLoader').fadeOut();
                $('.back_btn').removeClass('show');
                $('#mainsection').append(htmtxt).fadeIn().slideDown(1000);
                ScrollDown();
            }, 1000)
        }

        function LoadQuestion(data) {
            $('.typeLoader').fadeIn();
            $('.back_btn').removeClass('show');
            var htmtxt = '';
            htmtxt += '<article class="left-msg message">';
            htmtxt += '<div class="msg_container">';
            htmtxt += '<div class="">';
            htmtxt += '<figure class="image is-35x35 img_scale Avatar">';
            htmtxt += '<img alt="" class="Media is-contain" src="images/doc_icon.png">';
            htmtxt += '</figure>';
            htmtxt += '</div>';
            htmtxt += '<div class="message-content">';
            htmtxt += '<div class="msg_content_item  is-shape-rounded">';
            htmtxt += '<svg class="MessageBubble__Decorator" xmlns="http://www.w3.org/2000/svg" width="16" height="28"';
            htmtxt += 'viewBox="0 0 16 28">';
            htmtxt += '<title> Path</title>';
            htmtxt += '<desc> Created with Sketch.</desc>';
            htmtxt += '<g fill="none">';
            htmtxt += '<path d="M5 0.2C5 10 5 16.6 5 20 5 23.4 3.3 25.8 0 27.2 10.5 27.8 15.8 24.8 15.8 18.4 15.8 16.3 15.8 10.3 15.8 0.2L5 0.2Z"';
            htmtxt += 'fill="#FFF"></path>';
            htmtxt += '</g>';
            htmtxt += '</svg>';
            htmtxt += '<div class="MessageBubble__content">';
            htmtxt += '<div style="max-width: 100%;">';
            htmtxt += '<div class="content is-marginless">';
            htmtxt += data.dmessage;
            if (data.input.length > 0) {
                htmtxt += '<p>';
                htmtxt += '<div class="input_content inputsend">';
                if (data.input[0].format=="auto")
                    htmtxt += '<input type="number" class="input is-animate-messages-on inputdata" data-max="' + data.input[0].max + '" data-min="' + data.input[0].min + '" />';
                else
                    htmtxt += '<input type="text" class="input is-animate-messages-on inputdata" data-max="' + data.input[0].max + '" data-min="' + data.input[0].min + '" />';

                htmtxt += '<button type="button" class="icon_btn btn_age_send" data-obj="' + data.objname + '" data-parentid="' + data.parentid + '" data-curentqid="' + data.id + '" data-var="' + data.input[0].click + '" onclick="AskNextQuestionInput(this);">';
                htmtxt += '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" x="3650"y="3688">';
                htmtxt += '<path fill="#af8490" d="M1.1 21.757l22.7-9.73L1.1 2.3l.012 7.912 13.623 1.816-13.623 1.817-.01 7.912z"></path></svg></button>';
                htmtxt += '<div class="icon_btn validate_icon_button padding_0" style="display: none;">';
                htmtxt += '<svg xml:space="preserve" viewBox="0 0 100 100" y="0" x="0"';
                htmtxt += 'xmlns="http://www.w3.org/2000/svg" id="Layer_1" version="1.1"';
                htmtxt += 'style="background: rgb(255, 255, 255) none repeat scroll 0% 0%;"';
                htmtxt += 'width="50px" height="35px">';
                htmtxt += '<g style="transform-origin: 50% 50% 0px; transform: rotate(0deg) scale(0.8);"';
                htmtxt += 'class="ldl-scale">';
                htmtxt += '<g class="ldl-ani">';
                htmtxt += '<linearGradient y2="85.807" x2="51.618" y1="37.807"';
                htmtxt += 'x1="36.618" gradientUnits="userSpaceOnUse"';
                htmtxt += 'id="SVGID_1_">';
                htmtxt += '<stop stop-color="#e15c64" offset="0"';
                htmtxt += 'style="stop-color: rgb(235, 223, 60); fill: rgb(235, 223, 60);">';
                htmtxt += '</stop>';
                htmtxt += '<stop stop-color="#b0484f" offset="1"';
                htmtxt += 'style="stop-color: rgb(235, 223, 60); fill: rgb(235, 223, 60);">';
                htmtxt += '</stop>';
                htmtxt += '</linearGradient>';
                htmtxt += '<g class="ldl-layer">';
                htmtxt += '<g class="ldl-ani"';
                htmtxt += 'style="transform-origin: 50px 50px 0px; animation: 1.11111s linear -1.11111s infinite normal forwards running static-75f7fad1-5fd4-4122-8a31-76b7e68e98b2;">';
                htmtxt += '<path stroke-miterlimit="10" stroke-width="3.5"';
                htmtxt += 'stroke="#323232" fill="url(#SVGID_1_)"';
                htmtxt += 'd="M44.859 16.397L9.485 77.667c-2.285 3.957.571 8.904 5.141 8.904h70.748c4.57 0 7.425-4.947 5.141-8.904l-35.374-61.27c-2.285-3.957-7.997-3.957-10.282 0z"';
                htmtxt += 'style="stroke: rgb(50, 50, 50);"></path>';
                htmtxt += '</g></g><g class="ldl-layer"><g class="ldl-ani"><g>';
                htmtxt += '<g class="ldl-layer"><g class="ldl-ani"';
                htmtxt += 'style="transform-origin: 50px 50px 0px; animation: 1.11111s linear -1.11111s infinite normal forwards running static-75f7fad1-5fd4-4122-8a31-76b7e68e98b2;">';
                htmtxt += '<path fill="#fff"';
                htmtxt += 'd="M53.4 68.511l.6 3.906a4.048 4.048 0 0 1-8 1.23 4.183 4.183 0 0 1 0-1.229l.6-3.906a3.44 3.44 0 0 1 6.8-.001z"';
                htmtxt += 'style="fill: rgb(0, 0, 0);"></path></g></g></g></g></g>';
                htmtxt += '<g class="ldl-layer"><g class="ldl-ani"><g><g class="ldl-layer"><g class="ldl-ani"';
                htmtxt += 'style="transform-origin: 50px 50px 0px; animation: 1.11111s linear -1.11111s infinite normal forwards running static-75f7fad1-5fd4-4122-8a31-76b7e68e98b2;">';
                htmtxt += '<path fill="#fff"';
                htmtxt += 'd="M54 40.417l-1.2 17.28a2.807 2.807 0 0 1-5.6 0L46 40.417a4.01 4.01 0 1 1 8 0z"';
                htmtxt += 'style="fill: rgb(0, 0, 0);"></path></g></g></g></g></g>';
                htmtxt += '<metadata xmlns:d="https://loading.io/stock/"><d:name>fail</d:name><d:tags>';
                htmtxt += 'fail,reject,deny,negative,refuse,error,cancel,drop,warning';
                htmtxt += '</d:tags><d:license>by</d:license><d:slug>oiotst</d:slug></metadata></g></g></svg></div></div>';
                htmtxt += '</p>';
                htmtxt += '<p class="input_info inputsend">Press enter to send</p>';
            }
            htmtxt += '</div>';
            htmtxt += '</div>';
            htmtxt += '</div>';
            htmtxt += '</div>';
            htmtxt += '</div>';
            htmtxt += '</div>';

            if (data.buttons.length > 0) {
                htmtxt += '<div class="btn_group">';
                for (var i = 0; i < data.buttons.length; i++) {
                    htmtxt += '<button onclick="AskmultibuttonQuestion(this);" class="btn" data-obj="' + data.objname + '" data-parentid="' + data.parentid + '" data-curentqid="' + data.id + '" data-text="' + data.buttons[i].text + '" data-var="' + data.buttons[i].click + '">' + data.buttons[i].text + '</button>';
                }
                htmtxt += '</div>';
            }

            htmtxt += '<div class="back_btn_container">';
            htmtxt += '<button type="button" data-parentid="' + data.parentid + '" onclick="loadBackquestion(this);" class="back_btn">Back</button>';
            htmtxt += '</div>';
            htmtxt += '</article>';
            setTimeout(function () {
                $('.typeLoader').fadeOut();
                $('#mainsection').append(htmtxt).fadeIn().slideDown(1000);
                ScrollDown();
            }, 1000)
        }


        function LoadUserSentMessage(message) {
            var htmtxt = '';
            var now = new Date(Date.now());
            var formatted = now.getHours() + ":" + now.getMinutes();
            htmtxt += '<article class="right-msg message isUserMSG">';
            htmtxt += '<div class="message-content reverse">';
            htmtxt += '<div class="msg_content_item is-reverse is-shape-rounded is-author-user">';
            htmtxt += '<svg class="MessageBubble__Decorator" xmlns="http://www.w3.org/2000/svg" width="16" height="28"';
            htmtxt += 'viewBox="0 0 16 28">';
            htmtxt += '<title> Path</title>';
            htmtxt += '<desc> Created with Sketch.</desc>';
            htmtxt += '<g fill="none">';
            htmtxt += '<path d="M5 0.2C5 10 5 16.6 5 20 5 23.4 3.3 25.8 0 27.2 10.5 27.8 15.8 24.8 15.8 18.4 15.8 16.3 15.8 10.3 15.8 0.2L5 0.2Z"fill="#f8e61c"></path>';
            htmtxt += '</g>';
            htmtxt += '</svg>';
            htmtxt += '<div class="MessageBubble__content">';
            htmtxt += '<div class="sc-cBoqAE jowtfi MessageBubbleText content">' + message + '</div>';
            htmtxt += '</div>';
            htmtxt += '</div>';
            htmtxt += '<div class="message-right">';
            htmtxt += '<span class="mBtw MessageDate is-size-7">';
            htmtxt += '<b class="sc-EZqKI iONckA MessageDate__text">' + formatted + '</b>';
            htmtxt += '</span>';
            htmtxt += '</div>';
            htmtxt += '</div>';
            htmtxt += '</article>';
            setTimeout(function () {
                $('#mainsection').append(htmtxt).fadeIn().slideDown(500);
                ScrollDown();
            }, 500)

        }

        function AskNextQuestion(objthis) {
            var cQid = $(objthis).attr('data-var');
            var qtext = $(objthis).attr('data-text');
            var dataobj = $(objthis).attr('data-obj');
            var data = GetQuestionById(JData, cQid);
            var curentqid = $(objthis).attr('data-curentqid');
            var currentQuestion = GetQuestionById(JData, curentqid);
            switch (dataobj) {
                case 'age':
                    age = qtext
                    break;
                case 'weight':
                    weight = qtext
                    break;
                case 'symtoms':
                    symtoms = qtext
                    break;
                case 'covidtest':
                    covidtest = qtext
                    break;
                case 'contactwithcovid':
                    contactwithcovid = qtext
                    break;
                case 'feversince':
                    feversince = qtext
                    break;
                case 'breathcount':
                    breathcount = qtext
                    break;
                case 'nasalflaring':
                    nasalflaring = qtext
                    break;
                case 'pulserateapplicable':
                    pulserateapplicable = qtext
                    break;
                case 'pulserate':
                    pulserate = qtext
                    break;
                case 'crt':
                    crt = qtext
                    break;
                case 'noiseduringbreathing':
                    noiseduringbreathing = qtext
                    break;
                case 'severechestindrawing':
                    severechestindrawing = qtext
                    break;
                case 'temperature':
                    temperature = qtext
                    break;
                case 'spo2applicable':
                    spo2applicable = qtext
                    break;
                case 'spo2rate':
                    spo2rate = qtext
                    break;
                case 'covidantigentest':
                    covidantigentest = qtext
                    break;
                case 'lookforassociated':
                    lookforassociated = qtext
                    break;
                case 'historycondition':
                    historycondition = qtext
                    break;
                default:
                    break;
            }
            LoadUserSentMessage(qtext);
            if (data.cards.length > 0) {
                LoadCardOptionQuestion(data);
            }
            else {
                LoadQuestion(data);
            }
            $(objthis).hide();
            AddLog(qtext, currentQuestion.message, dataobj, qtext);
        }
        function AskmultibuttonQuestion(objthis) {
            var dataobj = $(objthis).attr('data-obj');
            var cQid = $(objthis).attr('data-var');
            var qtext = $(objthis).attr('data-text');
            var curentqid = $(objthis).attr('data-curentqid');
            var currentQuestion = GetQuestionById(JData, curentqid);
            var data = GetQuestionById(JData, cQid);
            switch (dataobj) {
                case 'age':
                    age = qtext
                    break;
                case 'weight':
                    weight = qtext
                    break;
                case 'symtoms':
                    symtoms = qtext
                    break;
                case 'covidtest':
                    covidtest = qtext
                    break;
                case 'contactwithcovid':
                    contactwithcovid = qtext
                    break;
                case 'feversince':
                    feversince = qtext
                    break;
                case 'breathcount':
                    breathcount = qtext
                    break;
                case 'nasalflaring':
                    nasalflaring = qtext
                    break;
                case 'pulserateapplicable':
                    pulserateapplicable = qtext
                    break;
                case 'pulserate':
                    pulserate = qtext
                    break;
                case 'crt':
                    crt = qtext
                    break;
                case 'noiseduringbreathing':
                    noiseduringbreathing = qtext
                    break;
                case 'severechestindrawing':
                    severechestindrawing = qtext
                    break;
                case 'temperature':
                    temperature = qtext
                    break;
                case 'spo2applicable':
                    spo2applicable = qtext
                    break;
                case 'spo2rate':
                    spo2rate = qtext
                    break;
                case 'covidantigentest':
                    covidantigentest = qtext
                    break;
                case 'lookforassociated':
                    lookforassociated = qtext
                    break;
                case 'historycondition':
                    historycondition = qtext
                    break;
                default:
                    break;
            }

            LoadUserSentMessage(qtext);
            if (data.cards.length > 0) {
                LoadCardOptionQuestion(data);

            }
            else {
                LoadQuestion(data);
            }
            $(objthis).parent().hide();
            $(objthis).parent().parent().find('.inputsend').slideUp('fast');
            AddLog(qtext, currentQuestion.message, dataobj, qtext);
        }
        function AskNextQuestionInput(objthis) {
            var cQid = $(objthis).attr('data-var');
            var dataobj = $(objthis).attr('data-obj');
            var qtext = $(objthis).parent().find('.inputdata').val();
            var curentqid = $(objthis).attr('data-curentqid');
            var data = GetQuestionById(JData, cQid);
            var currentQuestion = GetQuestionById(JData, curentqid);
            switch (dataobj) {
                case 'age':
                    age = qtext
                    break;
                case 'weight':
                    weight = qtext
                    break;
                case 'symtoms':
                    symtoms = qtext
                    break;
                case 'covidtest':
                    covidtest = qtext
                    break;
                case 'contactwithcovid':
                    contactwithcovid = qtext
                    break;
                case 'feversince':
                    feversince = qtext
                    break;
                case 'breathcount':
                    breathcount = qtext
                    break;
                case 'nasalflaring':
                    nasalflaring = qtext
                    break;
                case 'pulserateapplicable':
                    pulserateapplicable = qtext
                    break;
                case 'pulserate':
                    pulserate = qtext
                    break;
                case 'crt':
                    crt = qtext
                    break;
                case 'noiseduringbreathing':
                    noiseduringbreathing = qtext
                    break;
                case 'severechestindrawing':
                    severechestindrawing = qtext
                    break;
                case 'temperature':
                    temperature = qtext
                    break;
                case 'spo2applicable':
                    spo2applicable = qtext
                    break;
                case 'spo2rate':
                    spo2rate = qtext
                    break;
                case 'covidantigentest':
                    covidantigentest = qtext
                    break;
                case 'lookforassociated':
                    lookforassociated = qtext
                    break;
                case 'historycondition':
                    historycondition = qtext
                    break;
                default:
                    break;
            }

            LoadUserSentMessage(qtext);
            if (data.cards.length > 0) {
                LoadCardOptionQuestion(data);

            }
            else {
                LoadQuestion(data);
            }
            $(objthis).parent().hide();
            //$(objthis).parent().parent().find('.inputsend').hide();
            $(objthis).parent().parent().find('.inputsend').slideUp('fast');
            AddLog(qtext, currentQuestion.message, dataobj, qtext);
        }
        function AskNextQuestionCardOption(objthis) {
            var currentQId = $(objthis).attr('data-curentqid');
            var dataobj = $(objthis).attr('data-obj');
            var cQid = $(objthis).attr('data-var');
            var qtext = '';

            var nextQuestionId = 0;
            var ccount = 0;
            var cardDiv = $(objthis).parent().parent().find('.option_Msg_content');
            $(cardDiv).find('.selected ').each(function () {
                if (ccount == 0) {
                    qtext = qtext + $(this).text();
                }
                else {
                    qtext = qtext + ',' + $(this).text();
                }
                ccount++;
            });

            var currentQuestion = GetQuestionById(JData, currentQId)

            var condition = currentQuestion.conditions;

            switch (dataobj) {
                case 'age':
                    age = qtext
                    break;
                case 'weight':
                    weight = qtext
                    break;
                case 'symtoms':
                    symtoms = qtext
                    break;
                case 'covidtest':
                    covidtest = qtext
                    break;
                case 'contactwithcovid':
                    contactwithcovid = qtext
                    break;
                case 'feversince':
                    feversince = qtext
                    break;
                case 'breathcount':
                    breathcount = qtext
                    break;
                case 'nasalflaring':
                    nasalflaring = qtext
                    break;
                case 'pulserateapplicable':
                    pulserateapplicable = qtext
                    break;
                case 'pulserate':
                    pulserate = qtext
                    break;
                case 'crt':
                    crt = qtext
                    break;
                case 'noiseduringbreathing':
                    noiseduringbreathing = qtext
                    break;
                case 'severechestindrawing':
                    severechestindrawing = qtext
                    break;
                case 'temperature':
                    temperature = qtext
                    break;
                case 'spo2applicable':
                    spo2applicable = qtext
                    break;
                case 'spo2rate':
                    spo2rate = qtext
                    break;
                case 'covidantigentest':
                    covidantigentest = qtext
                    break;
                case 'lookforassociated':
                    lookforassociated = qtext
                    break;
                case 'historycondition':
                    historycondition = qtext
                    break;
                default:
                    break;
            }

            if (currentQId == 12) {
                if (cQid == 0) {
                    if (qtext.indexOf('None') != -1) {
                        cQid = 13;
                    } else if (qtext.indexOf('Jaundice') != -1) {
                        cQid = 21;
                    }
                    else if (qtext.indexOf('Diarrhoea') != -1) {
                        cQid = 23;
                    }
                }
            }
            if (currentQId == 27) {
                if (cQid == 0) {
                    if (qtext.indexOf('Fever') != -1) {
                        cQid = 29;
                    } else {
                        cQid = 28;
                    }
                }
            }


            if (nextQuestionId == 0) {
                nextQuestionId = cQid;
            }

            var data = GetQuestionById(JData, nextQuestionId);

            LoadUserSentMessage(qtext);
            $(objthis).parent().parent().hide();
            if (data.cards.length > 0) {
                LoadCardOptionQuestion(data);
            }
            else {
                LoadQuestion(data);
            }
            AddLog(qtext, currentQuestion.message, dataobj, qtext);
        }
        function LoadWellcomeMessage() {
            var data = GetQuestionById(JData, 1);
            LoadQuestion(data);
        }
        function GetQuestionById(jsonObject, id) {

            return jsonObject.filter(function (jsonObject) { return (jsonObject['id'] == id); })[0];
        }

        function loadBackquestion(objthis) {
            var dataId = $(objthis).attr('data-parentid');
            var data = GetQuestionById(JData, dataId);

            $(objthis).parent().parent().hide();
            if (data.cards.length > 0) {
                LoadCardOptionQuestion(data);
            }
            else {
                LoadQuestion(data);
            }
        }

        function ScrollDown() {
            $('html, body').animate({
                scrollTop: $(".chat_main_container").height()
            }, 2000);
        }
        $(document).on('mouseenter', 'article', function () {
            $('.back_btn').removeClass('show');
            $('.back_btn').last().addClass('show');
        });
        $(document).on('mouseleave', 'article', function () {
            $('.back_btn').removeClass('show');
        });

        function PrintChat(txtMsg) {
            $('.typeLoader').fadeIn();
            var htmtxt = '';
            htmtxt += '<article class="left-msg message">';
            htmtxt += '<div class="msg_container">';
            htmtxt += '<div class="">';
            htmtxt += '<figure class="image is-35x35 img_scale Avatar">';
            htmtxt += '<img alt="" class="Media is-contain" src="images/doc_icon.png">';
            htmtxt += '</figure>';
            htmtxt += '</div>';
            htmtxt += '<div class="message-content">';
            htmtxt += '<div class="msg_content_item  is-shape-rounded">';
            htmtxt += '<svg class="MessageBubble__Decorator" xmlns="http://www.w3.org/2000/svg" width="16" height="28"';
            htmtxt += 'viewBox="0 0 16 28">';
            htmtxt += '<title> Path</title>';
            htmtxt += '<desc> Created with Sketch.</desc>';
            htmtxt += '<g fill="none">';
            htmtxt += '<path d="M5 0.2C5 10 5 16.6 5 20 5 23.4 3.3 25.8 0 27.2 10.5 27.8 15.8 24.8 15.8 18.4 15.8 16.3 15.8 10.3 15.8 0.2L5 0.2Z"';
            htmtxt += 'fill="#FFF"></path>';
            htmtxt += '</g>';
            htmtxt += '</svg>';
            htmtxt += '<div class="MessageBubble__content">';
            htmtxt += '<div style="max-width: 100%;">';
            htmtxt += '<div class="content is-marginless">';
            htmtxt += txtMsg;
            htmtxt += '</div>';
            htmtxt += '</div>';
            htmtxt += '</div>';
            htmtxt += '</div>';
            htmtxt += '</div>';
            htmtxt += '</div>';

            htmtxt += '</article>';
            setTimeout(function () {
                $('.typeLoader').fadeOut();
                $('#mainsection').append(htmtxt).fadeIn().slideDown(1000);
                ScrollDown();
            }, 1000)
        }



        function PrintVariable1() {
            if (covidtest == 'Yes' || covidantigentest == 'Positive' || contactwithcovid == 'Yes') {
                if (feversince > 2) {
                    if (symtoms.indexOf('Diarrhoea') !== -1 && qtext.indexOf('Vomiting') !== -1) {

                    }
                    else {

                    }
                }
                else {

                }
            }
            else {
                if (age < 2 && breathcount > 59 && severechestindrawing == 'Yes') {
                    if (nasalflaring == 'Yes' || noiseduringbreathing == 'Yes' || lookforassociated.indexOf('Cold Extremities') !== -1 || lookforassociated.indexOf('Unable to drink') !== -1) {

                    }
                    else {

                    }
                }
                else {

                }
            }


          
        }
        function PrintVariable2() {
            alert("feversince:" + feversince);
            alert("breathcount:" + breathcount);
            alert("nasalflaring:" + nasalflaring);
            alert("pulserateapplicable:" + pulserateapplicable);
            alert("pulserate:" + pulserate);
        }
        function PrintVariable3() {
            alert("crt:" + crt);
            alert("noiseduringbreathing:" + noiseduringbreathing);
            alert("severechestindrawing:" + severechestindrawing);
            alert("temperature:" + temperature);
            alert("spo2applicable:" + spo2applicable);
        }
        function PrintVariable4() {
            alert("spo2rate:" + spo2rate);
            alert("covidantigentest:" + covidantigentest);
            alert("lookforassociated:" + lookforassociated);
            alert("historycondition:" + historycondition);
        }

        function AddLog(Answer, Question, DataVariableName, DataVariableValue) {
            var sData = {
                Question: Question,
                Answer: Answer,
                DataVariableName: DataVariableName,
                DataVariableValue: DataVariableValue,
                UserToken: $('#chid').val()
            };

            $.ajax({
                type: "POST",
                url: '/Home/AddChatLog',
                datatype: 'json',
                data: sData,
                success: function (reponse) {

                },
                error: function (result) {
                }
            });
        }

    </script>
</body>

</html>



